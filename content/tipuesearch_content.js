var tipuesearch = {"pages": [{'title': 'About', 'text': 'https://github.com/41223133/cp2023_ag3 \xa0 \n https://41223133.github.io/cp2023_ag3 \xa0 \n 41223117: https://github.com/Manto8/cp2023 \n 41223119: \n 41223121: https://github.com/yan21ed/cp2023 \n 41223122: \n 41223126:https://github.com/Ren911308/cp2023 \n 41223131: https://github.com/yuhao-08/cp2023 \n 41223132: https://github.com/CHN41223132/cp2023.git \n 41223133: https://github.com/41223133/cp2023 \n', 'tags': '', 'url': 'About.html'}, {'title': '個人學習心得', 'text': '41223117:課程內容有點難理解，不懂的地方只能看老師的教學視頻，從開學目前學到印象最深的是利用C語言進行類似的國旗，類似的國旗得過程中常出現程序錯誤導致國旗的發生錯誤，有時看老師的影片也不知道到底解決了，之後我詢問班上的同學慢慢掌握寫作程序的技巧，最後的國旗也順利全部出來了。 \n 接下來的小組合作中，我與同組成員分享想法，討論出各種不同的解決方案，我相信與小組成員互相討論定可以提高我和組員輸出寫C語言的能力。 \n 電腦課程豐富了我的專業知識，期望接下來的課程可以學到更多的新知識，我期待將學到的技能運用到未來的科技上，並在課程設計上更進一步的成長進步。 \n 412231 19: \n 412231 21:經過這學期的課程學習，讓我知悉網域設定及c++的實務應用，此堂課不是一般的難，需要細心推敲才能得出結論。雖然在學習中受到不少挫折，但最終還是撐了下來，希望這堂課能順利通過。 \n 412231 22: 這學期的計算機程式學了倉儲的運用及Python跟C語言的簡單用法,這學期還用到了用C語言繪製國旗。讓我知道程式語言不單僅僅是寫程式還可以繪製圖片。學習程式對於我們未來工作很有幫助。我們得CNC也要用到程式。所以我們必須讓機械與繪圖與程式結合。 \n 412231 26: 一開始都聽不懂老師的意思，只能不停地向同學請教，想辦法不要落後，努力跟上進度，抱持虛心求教的心態，為了要提升自己的能力，就要一直反覆看老師上課影的片，很常遇到不懂的問題，不知該如何解決就會去問ChatGPT，雖然到現在還是會常常看不懂問題在哪裡，但是只要一步一腳印地去尋找問題，就會發現一點之蛛絲馬跡，然後再去解決問題，在解決不了就只能去尋求同學的幫助，雖然我很想問同組的，但是同組不太會只能跟不同組的虛心求教，也學到一些之前從未接觸到的東西，例如:近端、遠端、架設個人網站，帶著隨身碟就可以編輯網站等。計算機這一門課，不只可以寫程式還可以了解程式。還可以培養讓我有自行解決問題的能力，真的獲益良多，雖然有些時候還是不得不尋求幫助，但也是不得已的時候會這麼做，不然一定是自己想辦法去解決，還能提升邏輯思考的能力，還有就算做錯只要留下記錄，搞不好會在不知不覺間開閉自己的道路，就像威爾鋼，就是這麼被發明出來的，可能乍看之下沒有什麼，其實可能有其他用處，真是受益匪淺。而且在不斷地做國旗中，也越做越有心得，不再像當初一樣懵懵懂懂，雖然常常會出現錯誤的程式，但是只要不停地去試，就能發現錯誤就能從中學習改進，讓自己更加精進，做到後面也知道該怎麼去尋找錯誤並改進，也對做國旗越來越覺得有趣，從剛開始的討厭到現在覺得真的很趣味，所謂是不打不相識，也讓這成為自己的一項能力，在做IRELAND國旗的時候，一開始出現中間橘色兩邊白色，接著我希望能有綠色變成中間橘色左邊白色右邊綠色，然後我說排序錯誤又變回 中間橘色兩邊白色，我又說了綠色不見變成中間橘色兩邊綠色，我說白色不見了不知道為甚麼又變成中間白色兩邊橘色，我又說綠色不見，這次終於出現正確的IRELAND國旗了，我感到興奮，終於自我成長了，這時我覺得應該打鐵趁熱，照著感覺我又接著做SWITZER國旗，一開始出現的又是錯誤的圖，一個橫向非常粗，直向非常細的十字，而且十字也太長了，所以我修正希望縮短長度，但卻變成一個白色正方形在中間，我迅速改正因為十字不見了，接著出現一個橫向非常細，直向非常粗的十字，而且還不是正十字，我接著說希望十字在正中心並且縮小，接著就出現縮在正中心的十字，可惜跟期望的十字有差，橫向太短，我又一次修改，希望橫向跟直向長短相同，竟然出現很奇怪的圖形，一個小方塊跟小長方形，就在修改沒想到出現奈米正十字，我感覺好像要成功了，接著讓它放大，可惜出現的太細，所以我又改粗，然後SWITZER國旗就大功告成了，在完成兩張圖之後，我有信心完成第三張圖也就是ICELAND的國旗，一開始果然又是錯誤的，接連出現各種奇怪十字，有的還缺一塊，有的還有黑色，經過我努力不懈的修正，終於出現像樣的紅十字然後我希望白色圍繞紅十字，沒想到出大包，竟然出現奇怪白方塊，再來紅色方塊，後來我再次修正，終於出現一模一樣的十字，可惜有點靠中，因此我又修改一波，終於出現正確ICELAND國旗，只能說我覺得自己真的有所成長了，真是感動， 感謝嚴家銘老師的細心指導，在我詢問他的時候不厭其煩的指導，因為你幽默的指導方式，才讓我能了解這門課，並且對這門課更有興趣。 \n 412231 31:學習C語言的過程讓我深刻體悟到程式設計的基礎重要性。雖然學習起來非常痛苦，但這奠定了我扎實的程式基礎，磨練了邏輯思維。 我期待在未來的應用中能更深入地運用這門強大的語言。這門語言的學習過程確實是一種挑戰，透過學習C語言，不僅建立了程式開發的基本功，更深入理解了計算機科學的核心原理。雖然學習很痛苦，但實際學起來還是很痛苦。 \n 412231 32:這堂課我剛開始看到的時候我就不是很明白這堂課要學甚麼，第一堂課開始我努力地去消化老師所教的課程內容，但到後面我開始分心，進而導致跟不上老師所教學的內容，但我後來清醒了，利用假日去找汶哲，一步步向他學習上課教的內容，雖然說我沒有學到很徹底，但我目前學會了如何利用Replit和Github建立網站，在Replit上畫國旗，不會時利用GPT來解答。總而言之這堂課我學到了很多未知的知識。 \n 412231 33:這一門課是我第一次接觸到的東西，以前從來沒有學過。老師上課說明講解的東西我實在是很難理解，原因是所有介面全部都是英文以外，我也不了解Github和Replit要如何去使用，就連靜態網頁轉成動態網頁的使用方式也都是我第一次接觸。凡是都有第一次，我一開始也對這門課感到很多期待，但沒想到會這麼的難。但我還是盡能力的去學習。 \n', 'tags': '', 'url': '個人學習心得.html'}, {'title': 'W5', 'text': '曲線圖 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n 43 \n \n \n \n // 包含標準輸出入程式庫的標頭文件 \n // https://blog.csdn.net/weixin_38468077/article/details/101069365 \n // http://www.gnuplot.info/demo/ \n // https://github.com/sysprog21/rv32emu \n // https://github.com/sysprog21/semu \n // https://docs.google.com/presentation/d/14N0cWG2SnBSqhc2cLF0_2VerB9FF8JN3 \n // https://cs61c.org/fa23/ \n // https://greenteapress.com/wp/think-python-2e/ \n // https://github.com/ecalvadi/c99-examples \n // https://github.com/gouravthakur39/beginners-C-program-examples \n // https://github.com/ergenekonyigit/Numerical-Analysis-Examples \n // https://www.che.ncku.edu.tw/facultyweb/changct/html/teaching/CPPandMATLAB/Past/pdf%20Files/Chap02-Ling.pdf \n // https://gteceducation.com.sg/Brochures/PROGRAMMING/C%20PROGRAMMING%20FULL.pdf \n // https://jsommers.github.io/cbook/cbook.pdf \n // https://jsommers.github.io/cbook/index.html \n // http://student.itee.uq.edu.au/courses/csse2310/CProgrammingNotes.pdf \n // http://cslibrary.stanford.edu/101/EssentialC.pdf \n // https://publications.gbdirect.co.uk/c_book/ \n // https://www.fossil-scm.org/fossil-book/doc/2ndEdition/fossilbook.pdf \n // ***** execute on replit \n // cd downloads \n // cc gnuplot_ex1.c -o gnuplot_ex1 \n // ./gnuplot_ex1 \n #include <stdio.h> \n \xa0\xa0 \xa0 \n // 主函式 \n int   main() { \n \xa0\xa0\xa0\xa0 // Start a Gnuplot process using popen \n \xa0\xa0\xa0\xa0 FILE   *gnuplotPipe = popen( "gnuplot -persistent" ,  "w" ); \n \xa0\xa0\xa0\xa0 if   (!gnuplotPipe) { \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 fprintf (stderr,  "Failed to start Gnuplot.\\n" ); \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 return   1; \n \xa0\xa0\xa0\xa0 } \n \xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 // Use Gnuplot plotting commands, specify font and output as PNG \n \xa0\xa0\xa0\xa0 fprintf (gnuplotPipe,  "set terminal png font \'default,10\' size 800,400\\n" ); \n \xa0\xa0\xa0\xa0 fprintf (gnuplotPipe,  "set output \'./../images/gnuplot_ex1.png\'\\n" ); \n \xa0\xa0\xa0\xa0 fprintf (gnuplotPipe,  "plot sin(x)" ); \n \xa0\xa0\xa0\xa0 // Close popen \n \xa0\xa0\xa0\xa0 pclose(gnuplotPipe); \n \xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 return   0; \n } \n \n \n \n \n \n \n \n \n \n 使用程式製作國旗 \n', 'tags': '', 'url': 'W5.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};